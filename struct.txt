World talks to Gamecontainer

World contains reference to Gamecontainer

World has physics
World has entities
Physics needs entites and changes the position of entites
World renders stuff

Player input is somethign that talks with the World
Same way online worker will talk to World

world should be able to give an image at any time

THe mesh needs its mesh specific shit
Sprite has scale and position and it will manage changing mesh
Entity has a sprite and it will have logic that will talk with a sprite

So a mesh will be super specific
A sprite is basically a wrapper that simplifies the mesh interface :)
Canvas is an object that renders sprites on to the world

# Make it very generalized
# Make functions for the smallest shit
# So that we can have an easy time when workign with online multiplayer

world{
    physics{
        changes entites in world
    }
    enitities [
        enitity {
            sprite{
                mesh #the shape of our sprite,
                canvasID # Its just an element, it is mesh specific
                draw() # type of draw is mesh specific
            }
            entitySpecific methods ...
        }
    ]
    renderer{
        talks with Gamecontainer
        renderEntities()
    }
}

playerInput{
    Seperate from world
    
    talks with world
}

network{
    Seperate from world

    talks with world
}

----------------------------------------------------

RequestCreation : Sent by the client to the server when a request is created
RequestDeletion : Sent by the client to the server when a request is deleted

NewGameRequest : Sent by server to all clients when a request is created
CancelGameRequests : Sent by server to all clients when a list of requests are deleted
